{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\n\nconst GenerateTrendingJSON = () => {\n  _s();\n\n  const arrTrending = [];\n  const [objTrending, storeTrending] = React.useState('');\n  React.useEffect(() => {\n    const cURL = 'https://api.coingecko.com/api/';\n    fetch(`${cURL}v3/search/trending`).then(response => response.json()).then(json => console.log(json.coins));\n  }, []);\n\n  for (const coins in objTrending) {\n    arrTrending === null || arrTrending === void 0 ? void 0 : arrTrending.push(Object.values(objTrending)[coins]);\n  }\n\n  return arrTrending;\n};\n\n_s(GenerateTrendingJSON, \"172pnNhfwehsY4ZjICKY3AAlS0A=\");\n\n_c = GenerateTrendingJSON;\nexport default GenerateTrendingJSON;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateTrendingJSON\");","map":{"version":3,"sources":["/Users/harryndugba/Documents/trading-gc/src/api/index.js"],"names":["React","GenerateTrendingJSON","arrTrending","objTrending","storeTrending","useState","useEffect","cURL","fetch","then","response","json","console","log","coins","push","Object","values"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACjC,QAAMC,WAAW,GAAG,EAApB;AACA,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAArC;AACAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClB,UAAMC,IAAI,GAAG,gCAAb;AACAC,IAAAA,KAAK,CAAE,GAAED,IAAK,oBAAT,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB,CAFlB;AAGH,GALD,EAKE,EALF;;AAMA,OAAK,MAAMA,KAAX,IAAoBX,WAApB,EAAiC;AAC/BD,IAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEa,IAAb,CAAkBC,MAAM,CAACC,MAAP,CAAcd,WAAd,EAA2BW,KAA3B,CAAlB;AACD;;AACD,SAAOZ,WAAP;AACD,CAbD;;GAAMD,oB;;KAAAA,oB;AAeN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\nconst GenerateTrendingJSON = () => {\n  const arrTrending = []\n  const [objTrending, storeTrending] = React.useState('')\n  React.useEffect(() => {\n      const cURL = 'https://api.coingecko.com/api/'\n      fetch(`${cURL}v3/search/trending`)\n          .then(response => response.json())\n          .then(json => console.log(json.coins))\n  },[])\n  for (const coins in objTrending) {\n    arrTrending?.push(Object.values(objTrending)[coins])\n  }\n  return arrTrending\n}\n\nexport default GenerateTrendingJSON"]},"metadata":{},"sourceType":"module"}